#ifndef POTION_H
#define POTION_H

typedef enum {
    POTION_COMMON,
    POTION_UNCOMMON,
    POTION_RARE
} PotionRarity;

typedef struct {
    char name[32];
    PotionRarity rarity;
    char description[128];
} Potion;

typedef enum {
    // Common Potions
    POTION_BLOODPOTION,
    POTION_POISONPOTION,
    POTION_FOCUSPOTION,
    POTION_BOTTLEDMIRACLE,
    POTION_FIREPOTION,
    POTION_EXPLOSIVEPOTION,
    POTION_WEAKPOTION,
    POTION_FEARPOTION,
    POTION_BLOCKPOTION,
    POTION_STRENGTHPOTION,
    POTION_DEXTERITYPOTION,
    POTION_STEROIDPOTION,
    POTION_SPEEDPOTION,
    POTION_ENERGYPOTION,
    POTION_SWIFTPOTION,
    POTION_ATTACKPOTION,
    POTION_SKILLPOTION,
    POTION_POWERPOTION,
    POTION_COLORLESSPOTION,
    POTION_BLESSINGOFTHEFORGE,

    // Uncommon Potions
    POTION_ELIXIR,
    POTION_CUNNINGPOTION,
    POTION_POTIONOFCAPACITY,
    POTION_STANCEPOTION,
    POTION_REGENPOTION,
    POTION_ANCIENTPOTION,
    POTION_LIQUIDBRONZE,
    POTION_GAMBLERSBREW,
    POTION_ESSENCEOFSTEEL,
    POTION_DUPLICATIONPOTION,
    POTION_DISTILLEDCHAOS,
    POTION_LIQUIDMEMORIES,

    POTION_HEARTOFIRON,
    POTION_GHOSTINAJAR,
    POTION_ESSENCEOFDARKNESS,
    POTION_AMBROSIA,
    POTION_CULTISTPOTION,
    POTION_FRUITJUICE,
    POTION_SNECKOOIL,
    POTION_FAIRYINABOTTLE,
    POTION_SMOKEBOMB,
    POTION_ENTROPICBREW,

    POTION_TOTAL_COUNT
} PotionID;

// Function declarations
extern Potion PotionDatabase[POTION_TOTAL_COUNT];
void print_potion(const Potion* potion);
Potion* get_potion_by_id(PotionID id);
void print_all_potions();

#endif